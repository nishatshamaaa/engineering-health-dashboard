{"version":3,"sources":["Constants.ts","components/Navbar.tsx","utils/getPRCount.ts","components/PRBarChart.tsx","components/Leaderboard.tsx","utils/getLeaderBoard.ts","components/Modal.tsx","utils/githubApi.ts","utils/getPRNetwork.ts","components/PRNetworkChart.tsx","components/PRHistogram.tsx","components/Dashboard.tsx","components/GenericModal.tsx","components/AuthModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NAVY","DARKER_NAVY","TEAMS","DE","INFRASTRUCTURE","NOMAD","HE","StyledAppBar","styled","AppBar","background","color","Navbar","CssBaseline","Toolbar","Typography","variant","repoToTeamMapping","mothership","dbt","partners","atlas","PRBarChart","prCountByDay","data","team","prList","search","edges","repoNameRegex","filter","pr","nameMatch","exec","node","url","prByDay","day","count","dayName","forEach","Date","createdAt","getDay","x","find","p","getDailyReviewRaiseCount","component","margin","top","right","bottom","left","indexBy","keys","labelTextColor","enableGridX","colors","theme","axis","ticks","line","stroke","text","fill","Leaderboard","props","leaderBoard","authors","map","author","login","Object","entries","countBy","sort","a","b","slice","getLeaderBoard","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","index","StyledContainer","div","Chart","StyledModal","style","Modal","display","alignItems","justifyContent","StyledSelect","Select","width","StyledPaper","Paper","outline","ChartModal","rootRef","React","useRef","console","log","chart","ref","disablePortal","disableEnforceFocus","disableAutoFocus","open","aria-labelledby","aria-describedby","onBackdropClick","closeModal","Grid","container","direction","justify","spacing","xs","item","showFilter","FormControl","InputLabel","id","labelId","value","onChange","e","selectTeam","target","MenuItem","String","nodeProps","radius","depth","getPRNetwork","nodes","links","nodeExists","n","reviews","push","length","review","reviewer","existingReviewer","Math","random","existingLink","link","source","findLink","distance","PRNetwork","repulsivity","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","from","modifiers","linkThickness","motionStiffness","motionDamping","PRHistogram","timeToClose","edge","closedAt","createdAtDate","parseISO","closedAtDate","differenceInBusinessDays","max","nBins","min","range","i","bin","ttc","makeData","histData","height","padding","GridItem","useState","modalOpen","setModalOpen","isClickable","setTeam","children","t","filterPanel","onClick","md","lg","Dashboard","password","useSWR","headers","Headers","set","btoa","username","fetch","method","then","response","json","alignContent","CircularProgress","textAlign","GenericModal","AuthModal","setPassword","TextField","type","label","Button","onSubmit","Container","App","process","REACT_APP_PASSWORD","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2ef4559.chunk.js","sourcesContent":["export const WHITE = \"#FFFFFF\";\nexport const YELLOW = \"#FFDD00\";\nexport const RED = \"#E75554\";\nexport const DARK_TEAL = \"#809099\";\nexport const LIGHT_TEAL = \"#A3AAB2\";\nexport const GREEN = \"#00e08a\";\nexport const ORANGE = \"#FF9400\";\nexport const GRAY = \"lightgray\";\nexport const BLUE = \"#629BE6\";\n\nexport const LIGHTEST_NAVY = \"#495666\";\nexport const LIGHTER_NAVY = \"#414D5B\";\nexport const LIGHT_NAVY = \"#3A4451\";\nexport const SEMI_LIGHT_NAVY = \"#333C47\";\nexport const NAVY = \"#2C343F\";\nexport const SEMI_DARK_NAVY = \"#272F38\";\nexport const DARK_NAVY = \"#242B33\";\nexport const DARKER_NAVY = \"#1D2228\";\n\nexport const TEAMS: any = {\n  DE: \"Data dev\",\n  INFRASTRUCTURE: \"Infrastructure\",\n  NOMAD: \"Nomad\",\n  HE: \"Hardware\",\n};\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { DARKER_NAVY, YELLOW } from \"../Constants\";\n\nconst StyledAppBar = styled(AppBar)({\n  background: YELLOW,\n  color: DARKER_NAVY,\n});\n\nexport default function Navbar() {\n  return (\n    <>\n      <CssBaseline />\n      <StyledAppBar>\n        <Toolbar>\n          <Typography variant=\"h6\">Engineering Health Dashboard</Typography>\n        </Toolbar>\n      </StyledAppBar>\n      <Toolbar />\n    </>\n  );\n}\n","import { Data } from \"../components/Dashboard\";\nimport { TEAMS } from \"../Constants\";\n\nconst repoToTeamMapping: any = {\n  \"geospatial-growth-hack\": TEAMS.DE,\n  mothership: TEAMS.INFRASTRUCTURE,\n  \"web-server\": TEAMS.INFRASTRUCTURE,\n  dbt: TEAMS.INFRASTRUCTURE,\n  partners: TEAMS.INFRASTRUCTURE,\n  atlas: TEAMS.NOMAD,\n  \"dirtmate-edge\": TEAMS.HE,\n  \"3p\": TEAMS.DE,\n  \"aeropoints-fulfillers\": TEAMS.HE,\n  \"aeropoints-firmware\": TEAMS.HE,\n};\n\n// const authorToTeamMapping = {\n//   martinlecs: TEAMS.HE,\n//   krzyho: TEAMS.INFRASTRUCTURE,\n//   fredgreer: TEAMS.HE,\n//   RacingTadpole: TEAMS.NOMAD,\n//   keithbro: TEAMS.NOMAD,\n//   Westermann: TEAMS.DE,\n//   rusteyy: TEAMS.DE,\n// };\n\nexport const getDailyReviewRaiseCount = (data: Data, team?: string) => {\n  let prList = data.data.search.edges;\n  if (!prList) return;\n\n  const repoNameRegex = /https:\\/\\/github.com\\/PropellerAero\\/(.*?)\\//;\n  if (team)\n    prList = prList.filter((pr) => {\n      const nameMatch = repoNameRegex.exec(pr.node.url);\n      return nameMatch ? TEAMS[team] === repoToTeamMapping[nameMatch[1]] : null;\n    });\n\n  const prByDay = [\n    { day: 0, count: 0, dayName: \"Sunday\" },\n    { day: 1, count: 0, dayName: \"Monday\" },\n    { day: 2, count: 0, dayName: \"Tuesday\" },\n    { day: 3, count: 0, dayName: \"Wednesday\" },\n    { day: 4, count: 0, dayName: \"Thursday\" },\n    { day: 5, count: 0, dayName: \"Friday\" },\n    { day: 6, count: 0, dayName: \"Saturday\" },\n  ];\n\n  //assuming we have only one week of data\n  prList.forEach((pr) => {\n    let day = new Date(pr.node.createdAt).getDay();\n    const x = prByDay.find((p) => p.day === day);\n    if (x) x.count++;\n  });\n\n  return prByDay;\n};\n","import { ResponsiveBar } from \"@nivo/bar\";\n\nimport React from \"react\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\n\nimport { DARKER_NAVY, NAVY } from \"../Constants\";\nimport { getDailyReviewRaiseCount } from \"../utils/getPRCount\";\nimport { Data } from \"./Dashboard\";\n\nexport default function PRBarChart({ data, team }: { data: Data; team: any }) {\n  const prCountByDay = getDailyReviewRaiseCount(data, team);\n\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Requests Raised Across Propeller\n        </Typography>\n      </Toolbar>\n      <ResponsiveBar\n        margin={{ top: 30, right: 80, bottom: 80, left: 80 }}\n        data={prCountByDay as any}\n        indexBy=\"dayName\"\n        keys={[\"count\"]}\n        labelTextColor={NAVY}\n        enableGridX={false}\n        colors={\"#28AFB0\"}\n        theme={{\n          axis: {\n            ticks: {\n              line: {\n                stroke: DARKER_NAVY,\n              },\n              text: {\n                fill: DARKER_NAVY,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n}\n","import {\n  Table,\n  TableCell,\n  TableContainer,\n  TableBody,\n  TableRow,\n  Typography,\n  TableHead,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { getLeaderBoard } from \"../utils/getLeaderBoard\";\nimport { Data } from \"./Dashboard\";\n\ninterface LeaderboardProps {\n  data: Data;\n}\n\nexport default function Leaderboard(props: LeaderboardProps) {\n  const { data } = props;\n  const leaderBoard = data ? getLeaderBoard(data) : [];\n\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Request Leaderboard\n        </Typography>\n      </Toolbar>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Position</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>PRs Opened</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {leaderBoard.map((author: any, index: number) => (\n              <TableRow key={index}>\n                <TableCell>{index + 1}</TableCell>\n                <TableCell>\n                  {index === 0 && <span>👑 </span>}\n                  {author[0]}\n                </TableCell>\n                <TableCell>{author[1]}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import countBy from \"lodash/countBy\";\nimport { Data } from \"../components/Dashboard\";\n\nexport const getLeaderBoard = (data: Data) => {\n  const prList = data.data.search.edges;\n  const authors = prList.map((pr: any) => pr?.node?.author?.login);\n  return Object.entries(countBy(authors))\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 5);\n};\n","import React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { styled as style } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\n\nimport {\n  Typography,\n  Select,\n  Toolbar,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport { TEAMS } from \"../Constants\";\n\nconst StyledContainer = styled.div`\n  min-height: 450px;\n  width: 100%;\n  top: 0;\n`;\n\nconst Chart = styled.div`\n  height: 500px;\n  width: 100%;\n  padding: 40px;\n  margin: 20px;\n`;\n\nconst StyledModal = style(Modal)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\nconst StyledSelect = style(Select)({\n  width: 200,\n});\n\nconst StyledPaper = style(Paper)({\n  width: \"60%\",\n  outline: \"none\",\n});\n\ntype Props = {\n  chart: React.ReactElement;\n  closeModal: () => void;\n  selectTeam: (team: any) => void;\n  team: string;\n  showFilter: boolean;\n};\n\nexport default function ChartModal(props: Props) {\n  const rootRef = React.useRef(null);\n\n  console.log(props.chart);\n  return (\n    <div ref={rootRef}>\n      <StyledModal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        onBackdropClick={props.closeModal}\n      >\n        <StyledPaper>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={10}\n          >\n            <Grid xs={8} item>\n              <Chart>{props.chart}</Chart>\n            </Grid>\n            {props.showFilter && (\n              <Grid xs={4} item>\n                <StyledContainer>\n                  <Toolbar>\n                    <Typography component=\"div\">Filters:</Typography>\n                  </Toolbar>\n                  <FormControl>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      By team\n                    </InputLabel>\n                    <StyledSelect\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={props.team}\n                      onChange={(e) => props.selectTeam(e.target.value)}\n                    >\n                      <MenuItem value=\"\">None</MenuItem>\n                      {Object.entries(TEAMS).map(([value, team]) => (\n                        <MenuItem value={value}>{String(team)}</MenuItem>\n                      ))}\n                    </StyledSelect>\n                  </FormControl>\n                </StyledContainer>\n              </Grid>\n            )}\n          </Grid>\n        </StyledPaper>\n      </StyledModal>\n    </div>\n  );\n}\n","const username = \"propeller\";\n\nexport const fetcher = (password: string) => (url: string) => {\n  let headers = new Headers();\n  headers.set(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n  return fetch(url, { method: \"GET\", headers }).then((response) =>\n    response.json()\n  );\n};\n","const nodeProps = {\n  radius: 8,\n  depth: 1,\n  color: \"rgb(97, 205, 187)\",\n};\n\nexport const getPRNetwork = (data: any) => {\n  const nodes: any = [];\n  const links: any = [];\n\n  const prList = data?.data?.search?.edges;\n\n  if (!prList) return { nodes, links };\n\n  const nodeExists = (author: any) => nodes.find((n: any) => n.id === author);\n  const findLink = (author: string, reviewer: string) =>\n    links.find(\n      (link: any) =>\n        (link.source === author && link.target === reviewer) ||\n        (link.source === reviewer && link.target === author)\n    );\n\n  prList.forEach((pr: any) => {\n    const author = pr.node?.author?.login;\n    const reviews = pr.node?.reviews?.nodes;\n    if (!nodeExists(author))\n      nodes.push({\n        id: author,\n        ...nodeProps,\n      });\n\n    if (reviews && reviews.length > 0) {\n      reviews.forEach((review: any) => {\n        const reviewer = review.author.login;\n        const existingReviewer = nodeExists(reviewer);\n        if (existingReviewer) {\n          existingReviewer.radius += 1; //people who review more will have bigger nodes\n          existingReviewer.color =\n            Math.random() > 0.5 ? \"rgb(232, 193, 160)\" : \"rgb(244, 117, 96)\";\n        } else {\n          nodes.push({\n            id: reviewer,\n            ...nodeProps,\n          });\n        }\n        const existingLink = findLink(author, reviewer);\n        if (existingLink) existingLink.distance += 100;\n        else\n          links.push({\n            source: author,\n            target: reviewer,\n            distance: 100,\n          });\n      });\n    }\n  });\n\n  return { nodes, links };\n};\n","import { ResponsiveNetwork } from \"@nivo/network\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\n\nimport { getPRNetwork } from \"../utils/getPRNetwork\";\n\nexport default function PRNetwork(props: any) {\n  const { nodes, links } = getPRNetwork(props.data);\n\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Propeller PR Review Network\n        </Typography>\n      </Toolbar>\n      <ResponsiveNetwork\n        nodes={nodes}\n        links={links}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        repulsivity={30}\n        iterations={500}\n        nodeColor={function (e) {\n          return e.color;\n        }}\n        nodeBorderWidth={1}\n        nodeBorderColor={{ from: \"color\", modifiers: [[\"darker\", 0.8]] }}\n        linkThickness={function (e) {\n          return 2 * (2 - e.source.depth);\n        }}\n        motionStiffness={160}\n        motionDamping={12}\n      />\n    </>\n  );\n}\n","import { Toolbar, Typography } from \"@material-ui/core\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\nimport {\n  parseISO,\n  differenceInMinutes,\n  differenceInBusinessDays,\n} from \"date-fns\";\nimport range from \"lodash/range\";\n\nimport { DARKER_NAVY, NAVY } from \"../Constants\";\nimport { Data } from \"./Dashboard\";\n\ninterface PRHistogramProps {\n  data: Data;\n}\n\ninterface RBData {\n  id: string;\n  value: number;\n}\n\nconst makeData = (data: Data): RBData[] => {\n  const timeToClose = data.data.search.edges.map((edge) => {\n    const { createdAt, closedAt } = edge.node;\n    const createdAtDate = parseISO(createdAt);\n    const closedAtDate = parseISO(closedAt);\n    const diff = differenceInBusinessDays(closedAtDate, createdAtDate);\n    return diff;\n  });\n\n  const max = Math.max(...timeToClose);\n  const nBins = Math.min(max, 10);\n\n  const bins = range(nBins).map((i) => [i * 1, (i + 1) * 1]);\n\n  const finalData = bins.map((bin) => {\n    return {\n      id: `${bin[0]} - ${bin[1]}`,\n      value: timeToClose.filter((ttc) => ttc <= bin[1] && ttc > bin[0]).length,\n    };\n  });\n\n  return finalData;\n};\n\nexport default function PRHistogram(props: PRHistogramProps) {\n  const data = makeData(props.data);\n  console.log({ histData: data });\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Requests Business Days To Close\n        </Typography>\n      </Toolbar>\n      <ResponsiveBar\n        margin={{ top: 30, right: 80, bottom: 80, left: 80 }}\n        data={data}\n        labelTextColor={NAVY}\n        enableGridX={false}\n        colors={\"#28AFB0\"}\n        theme={{\n          axis: {\n            ticks: {\n              line: {\n                stroke: DARKER_NAVY,\n              },\n              text: {\n                fill: DARKER_NAVY,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { CircularProgress, Paper } from \"@material-ui/core\";\n\nimport PRBarChart from \"./PRBarChart\";\nimport Leaderboard from \"./Leaderboard\";\nimport Modal from \"./Modal\";\nimport { fetcher } from \"../utils/githubApi\";\nimport PRNetwork from \"./PRNetworkChart\";\nimport PRHistogram from \"./PRHistogram\";\n\nexport interface Node {\n  createdAt: string;\n  closedAt: string;\n  url: string;\n}\nexport interface Edge {\n  node: Node;\n}\nexport interface Search {\n  edges: Edge[];\n}\nexport interface Data {\n  data: InnerData;\n}\n\ninterface InnerData {\n  search: Search;\n}\n\nconst Chart = styled(Paper)({\n  height: 500,\n  width: \"100%\",\n  padding: 40,\n  margin: 20,\n  outline: \"none\",\n});\n\nconst API = \"https://github-monitor.services.dev.propelleraero.com/prs_by_dev/\";\n\nconst GridItem = (props: any) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const { isClickable, team, setTeam } = props;\n  const onGridClick = () => isClickable && setModalOpen(true);\n\n  return (\n    <>\n      {modalOpen && (\n        <Modal\n          closeModal={() => setModalOpen(false)}\n          chart={props.children}\n          selectTeam={(t: string) => setTeam(t)}\n          team={team}\n          showFilter={props.filterPanel}\n        ></Modal>\n      )}\n      <Grid onClick={onGridClick} md={12} lg={6} item>\n        <Chart>{props.children}</Chart>\n      </Grid>\n    </>\n  );\n};\n\ninterface DashboardProps {\n  password: string;\n}\n\nexport default function Dashboard(props: DashboardProps) {\n  let { data } = useSWR<Data>(API, fetcher(props.password));\n  const [team, setTeam] = useState(\"\");\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      alignContent=\"center\"\n      spacing={10}\n    >\n      <GridItem>\n        {!data ? <CircularProgress /> : <Leaderboard data={data} />}\n      </GridItem>\n      <GridItem isClickable team={team} setTeam={setTeam} filterPanel>\n        {!data ? <CircularProgress /> : <PRBarChart data={data} team={team} />}\n      </GridItem>\n      <GridItem>\n        {!data ? <CircularProgress /> : <PRHistogram data={data} />}\n      </GridItem>\n      <GridItem isClickable>\n        {!data ? <CircularProgress /> : <PRNetwork data={data} />}\n      </GridItem>\n    </Grid>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { styled as style } from \"@material-ui/core/styles\";\n\nimport { Paper } from \"@material-ui/core\";\n\nconst StyledModal = style(Modal)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst StyledPaper = style(Paper)({\n  width: \"60%\",\n  outline: \"none\",\n  padding: 100,\n  textAlign: \"center\",\n});\n\ntype Props = {\n  children: ReactElement | ReactElement[];\n};\n\nexport default function GenericModal(props: Props) {\n  const rootRef = React.useRef(null);\n  const closeModal = () => {};\n\n  return (\n    <div ref={rootRef}>\n      <StyledModal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        onBackdropClick={closeModal}\n      >\n        <StyledPaper>{props.children}</StyledPaper>\n      </StyledModal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { TextField, Button } from \"@material-ui/core\";\nimport GenericModal from \"./GenericModal\";\n\ntype Props = {\n  onSubmit: (password: string) => void;\n};\n\nexport default function AuthModal(props: Props) {\n  const [password, setPassword] = useState(\"\");\n  const handleOnClick = (e: React.MouseEvent) => {\n    props.onSubmit(password);\n  };\n  return (\n    <GenericModal>\n      <TextField\n        type=\"password\"\n        label=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      <br />\n      <Button color=\"primary\" variant=\"contained\" onClick={handleOnClick}>\n        Login\n      </Button>\n    </GenericModal>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Dashboard from \"./components/Dashboard\";\nimport AuthModal from \"./components/AuthModal\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  padding: 100px;\n`;\n\nfunction App() {\n  const [password, setPassword] = useState<string | undefined>(\n    process.env.REACT_APP_PASSWORD\n  );\n  return (\n    <Container>\n      {password ? (\n        <>\n          {\" \"}\n          <Navbar />\n          <Dashboard password={password} />\n        </>\n      ) : (\n        <AuthModal onSubmit={(password) => setPassword(password)} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}