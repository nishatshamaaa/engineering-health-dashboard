{"version":3,"sources":["Constants.ts","components/Navbar.tsx","utils/getPRCount.ts","components/PRBarChart.tsx","components/Leaderboard.tsx","utils/getLeaderBoard.ts","components/Modal.tsx","utils/githubApi.ts","assets/spinner.gif","components/Spinner.tsx","components/PRHistogram.tsx","components/Dashboard.tsx","components/GenericModal.tsx","components/AuthModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NAVY","DARKER_NAVY","TEAMS","DE","INFRASTRUCTURE","NOMAD","HE","StyledAppBar","styled","AppBar","background","color","Navbar","CssBaseline","Toolbar","Typography","variant","repoToTeamMapping","mothership","dbt","partners","atlas","PRBarChart","prCountByDay","data","team","prList","search","edges","repoNameRegex","filter","pr","nameMatch","exec","node","url","prByDay","day","count","dayName","forEach","Date","createdAt","getDay","find","p","getDailyReviewRaiseCount","component","margin","top","right","bottom","left","indexBy","keys","labelTextColor","enableGridX","colors","theme","axis","ticks","line","stroke","text","fill","Leaderboard","props","leaderBoard","authors","map","author","login","Object","entries","countBy","sort","a","b","slice","getLeaderBoard","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","index","StyledContainer","div","StyledModal","style","Modal","display","alignItems","justifyContent","StyledSelect","Select","width","StyledPaper","Paper","outline","ChartModal","rootRef","React","useRef","ref","disablePortal","disableEnforceFocus","disableAutoFocus","open","aria-labelledby","aria-describedby","onBackdropClick","closeModal","Grid","container","direction","justify","spacing","xs","item","chart","FormControl","InputLabel","id","labelId","value","onChange","e","selectTeam","target","MenuItem","String","Spinner","src","spinner","height","alt","PRHistogram","timeToClose","edge","closedAt","createdAtDate","parseISO","closedAtDate","differenceInBusinessDays","console","log","min","Math","max","nBins","bins","range","i","bin","ttc","length","makeData","histData","Chart","padding","GridItem","useState","modalOpen","setModalOpen","isClickable","setTeam","children","t","onClick","md","lg","Dashboard","password","useSWR","headers","Headers","set","btoa","username","fetch","method","then","response","json","textAlign","GenericModal","AuthModal","setPassword","TextField","type","label","Button","onSubmit","Container","App","process","REACT_APP_PASSWORD","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2f93add.chunk.js","sourcesContent":["export const WHITE = \"#FFFFFF\";\nexport const YELLOW = \"#FFDD00\";\nexport const RED = \"#E75554\";\nexport const DARK_TEAL = \"#809099\";\nexport const LIGHT_TEAL = \"#A3AAB2\";\nexport const GREEN = \"#00e08a\";\nexport const ORANGE = \"#FF9400\";\nexport const GRAY = \"lightgray\";\nexport const BLUE = \"#629BE6\";\n\nexport const LIGHTEST_NAVY = \"#495666\";\nexport const LIGHTER_NAVY = \"#414D5B\";\nexport const LIGHT_NAVY = \"#3A4451\";\nexport const SEMI_LIGHT_NAVY = \"#333C47\";\nexport const NAVY = \"#2C343F\";\nexport const SEMI_DARK_NAVY = \"#272F38\";\nexport const DARK_NAVY = \"#242B33\";\nexport const DARKER_NAVY = \"#1D2228\";\n\nexport const TEAMS: any = {\n  DE: \"Data dev\",\n  INFRASTRUCTURE: \"Infrastructure\",\n  NOMAD: \"Nomad\",\n  HE: \"Hardware\",\n};\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { DARKER_NAVY, YELLOW } from \"../Constants\";\n\nconst StyledAppBar = styled(AppBar)({\n  background: YELLOW,\n  color: DARKER_NAVY,\n});\n\nexport default function Navbar() {\n  return (\n    <>\n      <CssBaseline />\n      <StyledAppBar>\n        <Toolbar>\n          <Typography variant=\"h6\">Engineering Health Dashboard</Typography>\n        </Toolbar>\n      </StyledAppBar>\n      <Toolbar />\n    </>\n  );\n}\n","import { TEAMS } from \"../Constants\";\n\nconst repoToTeamMapping: any = {\n  \"geospatial-growth-hack\": TEAMS.DE,\n  mothership: TEAMS.INFRASTRUCTURE,\n  \"web-server\": TEAMS.INFRASTRUCTURE,\n  dbt: TEAMS.INFRASTRUCTURE,\n  partners: TEAMS.INFRASTRUCTURE,\n  atlas: TEAMS.NOMAD,\n  \"dirtmate-edge\": TEAMS.HE,\n  \"3p\": TEAMS.DE,\n  \"aeropoints-fulfillers\": TEAMS.HE,\n  \"aeropoints-firmware\": TEAMS.HE,\n};\n\n// const authorToTeamMapping = {\n//   martinlecs: TEAMS.HE,\n//   krzyho: TEAMS.INFRASTRUCTURE,\n//   fredgreer: TEAMS.HE,\n//   RacingTadpole: TEAMS.NOMAD,\n//   keithbro: TEAMS.NOMAD,\n//   Westermann: TEAMS.DE,\n//   rusteyy: TEAMS.DE,\n// };\n\nexport const getDailyReviewRaiseCount = (data: any, team?: string) => {\n  let prList = data?.data?.search?.edges;\n  if (!prList) return;\n\n  const repoNameRegex = /https:\\/\\/github.com\\/PropellerAero\\/(.*?)\\//;\n  if (team)\n    prList =\n      team &&\n      prList.filter((pr: any) => {\n        const nameMatch = repoNameRegex.exec(pr?.node?.url);\n        return TEAMS[team] === repoToTeamMapping[nameMatch ? nameMatch[1] : \"\"];\n      });\n\n  const prByDay: any = [\n    { day: 0, count: 0, dayName: \"Sunday\" },\n    { day: 1, count: 0, dayName: \"Monday\" },\n    { day: 2, count: 0, dayName: \"Tuesday\" },\n    { day: 3, count: 0, dayName: \"Wednesday\" },\n    { day: 4, count: 0, dayName: \"Thursday\" },\n    { day: 5, count: 0, dayName: \"Friday\" },\n    { day: 6, count: 0, dayName: \"Saturday\" },\n  ];\n\n  //assuming we have only one week of data\n  prList.forEach((pr: any) => {\n    let day = new Date(pr?.node?.createdAt).getDay();\n    prByDay.find((p: any) => p.day === day).count++;\n  });\n\n  return prByDay;\n};\n","import { ResponsiveBar } from \"@nivo/bar\";\n\nimport React from \"react\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\n\nimport { DARKER_NAVY, NAVY } from \"../Constants\";\nimport { getDailyReviewRaiseCount } from \"../utils/getPRCount\";\n\nexport default function PRBarChart({ data, team }: any) {\n  const prCountByDay = getDailyReviewRaiseCount(data, team);\n\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Requests Raised Across Propeller\n        </Typography>\n      </Toolbar>\n      <ResponsiveBar\n        margin={{ top: 30, right: 80, bottom: 80, left: 80 }}\n        data={prCountByDay}\n        indexBy=\"dayName\"\n        keys={[\"count\"]}\n        labelTextColor={NAVY}\n        enableGridX={false}\n        colors={\"#28AFB0\"}\n        theme={{\n          axis: {\n            ticks: {\n              line: {\n                stroke: DARKER_NAVY,\n              },\n              text: {\n                fill: DARKER_NAVY,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n}\n","import {\n  Table,\n  TableCell,\n  TableContainer,\n  TableBody,\n  TableRow,\n  Typography,\n  TableHead,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { getLeaderBoard } from \"../utils/getLeaderBoard\";\nimport { Data } from \"./Dashboard\";\n\ninterface LeaderboardProps {\n  data: Data;\n}\n\nexport default function Leaderboard(props: LeaderboardProps) {\n  const { data } = props;\n  const leaderBoard = data ? getLeaderBoard(data) : [];\n\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Request Leaderboard\n        </Typography>\n      </Toolbar>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Position</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>PRs Opened</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {leaderBoard.map((author: any, index: number) => (\n              <TableRow key={index}>\n                <TableCell>{index + 1}</TableCell>\n                <TableCell>\n                  {index === 0 && <span>👑 </span>}\n                  {author[0]}\n                </TableCell>\n                <TableCell>{author[1]}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import countBy from \"lodash/countBy\";\nimport { Data } from \"../components/Dashboard\";\n\nexport const getLeaderBoard = (data: Data) => {\n  const prList = data.data.search.edges;\n  const authors = prList.map((pr: any) => pr?.node?.author?.login);\n  return Object.entries(countBy(authors))\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 5);\n};\n","import React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { styled as style } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\n\nimport {\n  Typography,\n  Select,\n  Toolbar,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport { TEAMS } from \"../Constants\";\n\nconst StyledContainer = styled.div`\n  min-height: 450px;\n  width: 100%;\n  top: 0;\n`;\n\nconst StyledModal = style(Modal)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\nconst StyledSelect = style(Select)({\n  width: 200,\n});\n\nconst StyledPaper = style(Paper)({\n  width: \"60%\",\n  outline: \"none\",\n});\n\ntype Props = {\n  chart: React.ReactElement;\n  closeModal: () => void;\n  selectTeam: (team: any) => void;\n  team: string;\n};\n\nexport default function ChartModal(props: Props) {\n  const rootRef = React.useRef(null);\n\n  return (\n    <div ref={rootRef}>\n      <StyledModal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        onBackdropClick={props.closeModal}\n      >\n        <StyledPaper>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={10}\n          >\n            <Grid xs={8} item>\n              {props.chart}\n            </Grid>\n            <Grid xs={4} item>\n              <StyledContainer>\n                <Toolbar>\n                  <Typography component=\"div\">Filters:</Typography>\n                </Toolbar>\n                <FormControl>\n                  <InputLabel id=\"demo-simple-select-label\">By team</InputLabel>\n                  <StyledSelect\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={props.team}\n                    onChange={(e) => props.selectTeam(e.target.value)}\n                  >\n                    <MenuItem value=\"\">None</MenuItem>\n                    {Object.entries(TEAMS).map(([value, team]) => (\n                      <MenuItem value={value}>{String(team)}</MenuItem>\n                    ))}\n                  </StyledSelect>\n                </FormControl>\n              </StyledContainer>\n            </Grid>\n          </Grid>\n        </StyledPaper>\n      </StyledModal>\n    </div>\n  );\n}\n","const username = \"propeller\";\n\nexport const fetcher = (password: string) => (url: string) => {\n  let headers = new Headers();\n  headers.set(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n  return fetch(url, { method: \"GET\", headers }).then((response) =>\n    response.json()\n  );\n};\n","export default __webpack_public_path__ + \"static/media/spinner.df897d1b.gif\";","import spinner from \"../assets/spinner.gif\";\n\nexport default function Spinner() {\n  return (\n    <img\n      src={spinner}\n      height={30}\n      style={{ margin: \"30px\" }}\n      alt=\"loading...\"\n    />\n  );\n}\n","import { Toolbar, Typography } from \"@material-ui/core\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\nimport {\n  parseISO,\n  differenceInMinutes,\n  differenceInBusinessDays,\n} from \"date-fns\";\nimport range from \"lodash/range\";\n\nimport { DARKER_NAVY, NAVY } from \"../Constants\";\nimport { Data } from \"./Dashboard\";\n\ninterface PRHistogramProps {\n  data: Data;\n}\n\ninterface RBData {\n  id: string;\n  value: number;\n}\n\nconst makeData = (data: Data): RBData[] => {\n  const timeToClose = data.data.search.edges.map((edge) => {\n    const { createdAt, closedAt } = edge.node;\n    const createdAtDate = parseISO(createdAt);\n    const closedAtDate = parseISO(closedAt);\n    const diff = differenceInBusinessDays(closedAtDate, createdAtDate);\n    return diff;\n  });\n\n  console.log({ timeToClose });\n\n  // const filteredTimeToClose = timeToClose.filter((ttc) => ttc < 200);\n\n  const min = Math.min(...timeToClose);\n  const max = Math.max(...timeToClose);\n  const nBins = max;\n  // const binSize = 1; // (max - min) / max;\n  console.log({ min, max });\n\n  // const bins = range(nBins).map((i) => {\n  //   return [i * binSize, (i + 1) * binSize];\n  // });\n\n  const bins = range(nBins).map((i) => [i * 1, (i + 1) * 1]);\n  console.log({ bins });\n\n  const finalData = bins.map((bin) => {\n    return {\n      id: `${bin[0]} - ${bin[1]}`,\n      value: timeToClose.filter((ttc) => ttc <= bin[1] && ttc > bin[0]).length,\n    };\n  });\n\n  return finalData;\n};\n\nexport default function PRHistogram(props: PRHistogramProps) {\n  const data = makeData(props.data);\n  console.log({ histData: data });\n  return (\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Pull Requests Business Days To Close\n        </Typography>\n      </Toolbar>\n      <ResponsiveBar\n        margin={{ top: 30, right: 80, bottom: 80, left: 80 }}\n        data={data}\n        labelTextColor={NAVY}\n        enableGridX={false}\n        colors={\"#28AFB0\"}\n        theme={{\n          axis: {\n            ticks: {\n              line: {\n                stroke: DARKER_NAVY,\n              },\n              text: {\n                fill: DARKER_NAVY,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\n\nimport PRBarChart from \"./PRBarChart\";\nimport Leaderboard from \"./Leaderboard\";\nimport Modal from \"./Modal\";\nimport { fetcher } from \"../utils/githubApi\";\n// import PRNetwork from \"./PRNetworkChart\";\nimport Spinner from \"./Spinner\";\nimport PRHistogram from \"./PRHistogram\";\n\nexport interface Node {\n  createdAt: string;\n  closedAt: string;\n}\nexport interface Edge {\n  node: Node;\n}\nexport interface Search {\n  edges: Edge[];\n}\nexport interface Data {\n  data: InnerData;\n}\n\ninterface InnerData {\n  search: Search;\n}\n\nconst Chart = styled(Paper)({\n  height: 500,\n  width: \"100%\",\n  padding: 40,\n  margin: 20,\n  outline: \"none\",\n});\n\nconst API = \"https://github-monitor.services.dev.propelleraero.com/prs_by_dev/\";\n\nconst GridItem = (props: any) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const { isClickable, team, setTeam } = props;\n  const onGridClick = () => isClickable && setModalOpen(true);\n\n  return (\n    <>\n      {modalOpen && (\n        <Modal\n          closeModal={() => setModalOpen(false)}\n          chart={props.children}\n          selectTeam={(t: string) => setTeam(t)}\n          team={team}\n        ></Modal>\n      )}\n      <Grid onClick={onGridClick} md={12} lg={6} item>\n        <Chart>{props.children}</Chart>\n      </Grid>\n    </>\n  );\n};\n\ninterface DashboardProps {\n  password: string;\n}\n\nexport default function Dashboard(props: DashboardProps) {\n  let { data } = useSWR<Data>(API, fetcher(props.password));\n  const [team, setTeam] = useState(\"\");\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={10}\n    >\n      <GridItem>{!data ? <Spinner /> : <Leaderboard data={data} />}</GridItem>\n      <GridItem isClickable team={team} setTeam={setTeam}>\n        {!data ? <Spinner /> : <PRBarChart data={data} team={team} />}\n      </GridItem>\n      <GridItem>{!data ? <Spinner /> : <PRHistogram data={data} />}</GridItem>\n      {/* <Grid xs={6} item>\n        <Chart>{!data ? <Spinner /> : <PRNetwork data={data} />}</Chart>\n      </Grid> */}\n    </Grid>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { styled as style } from \"@material-ui/core/styles\";\n\nimport { Paper } from \"@material-ui/core\";\n\nconst StyledModal = style(Modal)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst StyledPaper = style(Paper)({\n  width: \"60%\",\n  outline: \"none\",\n  padding: 100,\n  textAlign: \"center\",\n});\n\ntype Props = {\n  children: ReactElement | ReactElement[];\n};\n\nexport default function GenericModal(props: Props) {\n  const rootRef = React.useRef(null);\n  const closeModal = () => {};\n\n  return (\n    <div ref={rootRef}>\n      <StyledModal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        onBackdropClick={closeModal}\n      >\n        <StyledPaper>{props.children}</StyledPaper>\n      </StyledModal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { TextField, Button } from \"@material-ui/core\";\nimport GenericModal from \"./GenericModal\";\n\ntype Props = {\n  onSubmit: (password: string) => void;\n};\n\nexport default function AuthModal(props: Props) {\n  const [password, setPassword] = useState(\"\");\n  const handleOnClick = (e: React.MouseEvent) => {\n    props.onSubmit(password);\n  };\n  return (\n    <GenericModal>\n      <TextField\n        type=\"password\"\n        label=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      <br />\n      <Button color=\"primary\" variant=\"contained\" onClick={handleOnClick}>\n        Login\n      </Button>\n    </GenericModal>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Dashboard from \"./components/Dashboard\";\nimport AuthModal from \"./components/AuthModal\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  padding: 100px;\n`;\n\nfunction App() {\n  const [password, setPassword] = useState<string | undefined>(\n    process.env.REACT_APP_PASSWORD\n  );\n  return (\n    <Container>\n      {password ? (\n        <>\n          {\" \"}\n          <Navbar />\n          <Dashboard password={password} />\n        </>\n      ) : (\n        <AuthModal onSubmit={(password) => setPassword(password)} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}