{"version":3,"sources":["components/Navbar.tsx","Constants.ts","components/ExampleBarChart.tsx","components/Leaderboard.tsx","components/Modal.tsx","components/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledAppBar","styled","AppBar","background","color","Navbar","CssBaseline","Toolbar","Typography","variant","Chart","Paper","height","width","padding","MyResponsiveBar","data","keys","indexBy","margin","top","right","bottom","left","valueScale","type","indexScale","round","colors","scheme","defs","id","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","StyledPaper","position","name","reviews","Leaderboard","component","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","datum","StyledModal","Modal","display","alignItems","justifyContent","ChartModal","props","rootRef","React","useRef","ref","disablePortal","disableEnforceFocus","disableAutoFocus","open","aria-labelledby","aria-describedby","onBackdropClick","closeModal","chart","country","burger","burgerColor","sandwich","sandwichColor","kebab","kebabColor","fries","friesColor","donut","donutColor","GridItem","useState","modalOpen","setModalOpen","children","Grid","onClick","xs","item","Dashboard","container","ExampleBarChart","Container","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a0a5eb8.chunk.js","sourcesContent":["import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { DARKER_NAVY, YELLOW } from \"../Constants\";\n\nconst StyledAppBar = styled(AppBar)({\n  background: YELLOW,\n  color: DARKER_NAVY,\n});\n\nexport default function Navbar() {\n  return (\n    <>\n      <CssBaseline />\n      <StyledAppBar>\n        <Toolbar>\n          <Typography variant=\"h6\">Engineering Health Dashboard</Typography>\n        </Toolbar>\n      </StyledAppBar>\n      <Toolbar />\n    </>\n  );\n}\n","export const WHITE = \"#FFFFFF\";\nexport const YELLOW = \"#FFDD00\";\nexport const RED = \"#E75554\";\nexport const DARK_TEAL = \"#809099\";\nexport const LIGHT_TEAL = \"#A3AAB2\";\nexport const GREEN = \"#00e08a\";\nexport const ORANGE = \"#FF9400\";\nexport const GRAY = \"lightgray\";\nexport const BLUE = \"#629BE6\";\n\nexport const LIGHTEST_NAVY = \"#495666\";\nexport const LIGHTER_NAVY = \"#414D5B\";\nexport const LIGHT_NAVY = \"#3A4451\";\nexport const SEMI_LIGHT_NAVY = \"#333C47\";\nexport const NAVY = \"#2C343F\";\nexport const SEMI_DARK_NAVY = \"#272F38\";\nexport const DARK_NAVY = \"#242B33\";\nexport const DARKER_NAVY = \"#1D2228\";\n","import { ResponsiveBar } from \"@nivo/bar\";\nimport React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\n\nconst Chart = styled(Paper)({\n  height: 400,\n  width: \"100%\",\n  padding: 10,\n});\n\nconst MyResponsiveBar = ({ data }: { data: Array<any> }) => {\n  return (\n    <Chart>\n      <ResponsiveBar\n        data={data}\n        keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n        indexBy=\"country\"\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        valueScale={{ type: \"linear\" }}\n        indexScale={{ type: \"band\", round: true }}\n        colors={{ scheme: \"nivo\" }}\n        defs={[\n          {\n            id: \"dots\",\n            type: \"patternDots\",\n            background: \"inherit\",\n            color: \"#38bcb2\",\n            size: 4,\n            padding: 1,\n            stagger: true,\n          },\n          {\n            id: \"lines\",\n            type: \"patternLines\",\n            background: \"inherit\",\n            color: \"#eed312\",\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n          },\n        ]}\n        fill={[\n          {\n            match: {\n              id: \"fries\",\n            },\n            id: \"dots\",\n          },\n          {\n            match: {\n              id: \"sandwich\",\n            },\n            id: \"lines\",\n          },\n        ]}\n        borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"country\",\n          legendPosition: \"middle\",\n          legendOffset: 32,\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"food\",\n          legendPosition: \"middle\",\n          legendOffset: -40,\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n        legends={[\n          {\n            dataFrom: \"keys\",\n            anchor: \"bottom-right\",\n            direction: \"column\",\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: \"left-to-right\",\n            itemOpacity: 0.85,\n            symbolSize: 20,\n            effects: [\n              {\n                on: \"hover\",\n                style: {\n                  itemOpacity: 1,\n                },\n              },\n            ],\n          },\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n      />\n    </Chart>\n  );\n};\n\nexport default MyResponsiveBar;\n","import {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableBody,\n  TableRow,\n  Typography,\n  styled,\n  TableHead,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst StyledPaper = styled(Paper)({\n  height: 400,\n  width: \"100%\",\n  padding: 10,\n});\n\nconst data = [\n  {\n    position: 1,\n    name: \"Jonar\",\n    reviews: 7,\n  },\n  {\n    position: 2,\n    name: \"Peg\",\n    reviews: 5,\n  },\n  {\n    position: 3,\n    name: \"Duncam\",\n    reviews: 3,\n  },\n];\n\nexport default function Leaderboard() {\n  return (\n    <StyledPaper>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\">\n          Leaderboard\n        </Typography>\n      </Toolbar>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Position</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>PRs Reviewed</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((datum) => (\n              <TableRow>\n                <TableCell>{datum.position}</TableCell>\n                <TableCell>{datum.name}</TableCell>\n                <TableCell>{datum.reviews}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </StyledPaper>\n  );\n}\n","import React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledModal = styled(Modal)({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst StyledPaper = styled(Paper)({\n  width: \"80%\",\n});\n\ntype Props = {\n  chart: React.ReactElement;\n  closeModal: () => void;\n};\n\nexport default function ChartModal(props: Props) {\n  const rootRef = React.useRef(null);\n\n  return (\n    <div ref={rootRef}>\n      <StyledModal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        onBackdropClick={props.closeModal}\n      >\n        <StyledPaper>{props.chart}</StyledPaper>\n      </StyledModal>\n    </div>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport ExampleBarChart from \"./ExampleBarChart\";\nimport Leaderboard from \"./Leaderboard\";\nimport Modal from \"./Modal\";\n\nconst data = [\n  {\n    country: \"AD\",\n    \"hot dog\": 99,\n    \"hot dogColor\": \"hsl(84, 70%, 50%)\",\n    burger: 118,\n    burgerColor: \"hsl(180, 70%, 50%)\",\n    sandwich: 84,\n    sandwichColor: \"hsl(162, 70%, 50%)\",\n    kebab: 55,\n    kebabColor: \"hsl(208, 70%, 50%)\",\n    fries: 136,\n    friesColor: \"hsl(251, 70%, 50%)\",\n    donut: 4,\n    donutColor: \"hsl(14, 70%, 50%)\",\n  },\n  {\n    country: \"AE\",\n    \"hot dog\": 173,\n    \"hot dogColor\": \"hsl(113, 70%, 50%)\",\n    burger: 58,\n    burgerColor: \"hsl(342, 70%, 50%)\",\n    sandwich: 31,\n    sandwichColor: \"hsl(119, 70%, 50%)\",\n    kebab: 8,\n    kebabColor: \"hsl(281, 70%, 50%)\",\n    fries: 190,\n    friesColor: \"hsl(315, 70%, 50%)\",\n    donut: 50,\n    donutColor: \"hsl(145, 70%, 50%)\",\n  },\n  {\n    country: \"AF\",\n    \"hot dog\": 151,\n    \"hot dogColor\": \"hsl(273, 70%, 50%)\",\n    burger: 24,\n    burgerColor: \"hsl(209, 70%, 50%)\",\n    sandwich: 91,\n    sandwichColor: \"hsl(106, 70%, 50%)\",\n    kebab: 142,\n    kebabColor: \"hsl(222, 70%, 50%)\",\n    fries: 73,\n    friesColor: \"hsl(61, 70%, 50%)\",\n    donut: 8,\n    donutColor: \"hsl(235, 70%, 50%)\",\n  },\n  {\n    country: \"AG\",\n    \"hot dog\": 107,\n    \"hot dogColor\": \"hsl(137, 70%, 50%)\",\n    burger: 0,\n    burgerColor: \"hsl(147, 70%, 50%)\",\n    sandwich: 66,\n    sandwichColor: \"hsl(63, 70%, 50%)\",\n    kebab: 179,\n    kebabColor: \"hsl(9, 70%, 50%)\",\n    fries: 70,\n    friesColor: \"hsl(245, 70%, 50%)\",\n    donut: 117,\n    donutColor: \"hsl(44, 70%, 50%)\",\n  },\n  {\n    country: \"AI\",\n    \"hot dog\": 54,\n    \"hot dogColor\": \"hsl(224, 70%, 50%)\",\n    burger: 55,\n    burgerColor: \"hsl(351, 70%, 50%)\",\n    sandwich: 22,\n    sandwichColor: \"hsl(49, 70%, 50%)\",\n    kebab: 16,\n    kebabColor: \"hsl(95, 70%, 50%)\",\n    fries: 157,\n    friesColor: \"hsl(352, 70%, 50%)\",\n    donut: 42,\n    donutColor: \"hsl(13, 70%, 50%)\",\n  },\n  {\n    country: \"AL\",\n    \"hot dog\": 12,\n    \"hot dogColor\": \"hsl(282, 70%, 50%)\",\n    burger: 78,\n    burgerColor: \"hsl(98, 70%, 50%)\",\n    sandwich: 106,\n    sandwichColor: \"hsl(307, 70%, 50%)\",\n    kebab: 127,\n    kebabColor: \"hsl(297, 70%, 50%)\",\n    fries: 85,\n    friesColor: \"hsl(357, 70%, 50%)\",\n    donut: 127,\n    donutColor: \"hsl(288, 70%, 50%)\",\n  },\n  {\n    country: \"AM\",\n    \"hot dog\": 26,\n    \"hot dogColor\": \"hsl(174, 70%, 50%)\",\n    burger: 180,\n    burgerColor: \"hsl(4, 70%, 50%)\",\n    sandwich: 86,\n    sandwichColor: \"hsl(332, 70%, 50%)\",\n    kebab: 87,\n    kebabColor: \"hsl(19, 70%, 50%)\",\n    fries: 155,\n    friesColor: \"hsl(124, 70%, 50%)\",\n    donut: 92,\n    donutColor: \"hsl(51, 70%, 50%)\",\n  },\n];\n\nconst GridItem = (props: any) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const onGridClick = () => setModalOpen(true);\n\n  return (\n    <>\n      {modalOpen && (\n        <Modal\n          closeModal={() => setModalOpen(false)}\n          chart={props.children}\n        ></Modal>\n      )}\n      <Grid onClick={onGridClick} xs={6} item>\n        {props.children}\n      </Grid>\n    </>\n  );\n};\n\nexport default function Dashboard() {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={10}\n    >\n      <GridItem>\n        <Leaderboard />\n      </GridItem>\n      <GridItem>\n        <ExampleBarChart data={data} />\n      </GridItem>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport ExampleBarChart from \"./components/ExampleBarChart\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  padding: 100px;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Navbar />\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}